# This is a basic workflow to help you get started with Actions

name: CI

concurrency:
  group: CI
  cancel-in-progress: true

# Controls when the workflow will run
on:
  push:
    branches:
      - meson
  # Allows you to run this workflow manually from the Actions tab


# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build-linux:
    # The type of runner that the job will run on
    runs-on: ubuntu-22.04
    permissions:
      actions: read
      contents: read
      security-events: write
    env:
      CC: gcc-12
      CXX: g++-12

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      - name: Install deps
        run: |
          sudo apt-get update
          sudo apt-get install meson g++-12 ninja-build wget

      - name: Get release tarball
        run: |
          ls
          wget http://ftp.gnu.org/gnu/m4/m4-1.4.19.tar.xz
          tar --strip-components=1 -xvf m4-1.4.19.tar.xz

      # Runs a set of commands using the runners shell
      - name: Configure
        run: meson setup  --warnlevel 3 --buildtype release --default-library static  _build-linux

      # Runs a set of commands using the runners shell
      - name: Compile
        run: ninja -C _build-linux

      # Tests
      - name: Test
        run: ninja -C _build-linux test

  build-mac:
    # The type of runner that the job will run on
    runs-on: macos-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      - name: Install deps
        run: |
          brew update
          brew install meson libxml2 gcc@12 ninja wget

      - name: Get release tarball
        run: |
          ls
          wget http://ftp.gnu.org/gnu/m4/m4-1.4.19.tar.xz
          tar --strip-components=1 -xvf m4-1.4.19.tar.xz

      # Runs a set of commands using the runners shell
      - name: Configure
        run: CC=gcc-12 CXX=g++-12 meson setup --warnlevel 3 --buildtype release _build-mac

      # Runs a set of commands using the runners shell
      - name: Compile
        run: ninja -C _build-mac

      # Tests
      - name: Test
        run: ninja -C _build-mac test

      # Capture the binary
      - name: Binary
        uses: actions/upload-artifact@v3
        with:
          name: dregarnuhr-macos
          path: _build-mac/src/dregarnuhr

  build-win:
    # The type of runner that the job will run on
    runs-on: windows-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      - uses: actions/setup-python@v4
        with:
          python-version: '3.x'
      - run: pip install meson ninja

      - name: Prepare MSVC
        uses: bus1/cabuild/action/msdevshell@v1
        with:
          architecture: x64

      - name: Get release tarball
        run: |
          dir
          C:\msys64\usr\bin\wget.exe http://ftp.gnu.org/gnu/m4/m4-1.4.19.tar.xz
          C:\msys64\usr\bin\tar.exe --strip-components=1 -xvf m4-1.4.19.tar.xz

      - name: msys configure?
        run: |
          C:\msys64\usr\bin\sh.exe configure

      - name: msys make?
        run: |
          C:\msys64\usr\bin\make.exe

      # Runs a set of commands using the runners shell
      - name: Configure
        run: |
          meson setup  --warnlevel 3 --buildtype release -Dc_std=c17 -Dcpp_std=c++20 --default-library static -Dcpp_eh=a -Dlibxml2:warning_level=0 -Dminiz:warning_level=0 -Dlibjpeg-turbo:warning_level=0 _build-win

      # Runs a set of commands using the runners shell
      - name: Compile
        run: ninja -C _build-win

      # Tests
      - name: Test
        run: ninja -C _build-win test

      # Capture the binary
      - name: Binary
        uses: actions/upload-artifact@v3
        with:
          name: dregarnuhr-win
          path: _build-win/src/dregarnuhr.exe
